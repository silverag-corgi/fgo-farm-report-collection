####################################################################################################
# package management tool
####################################################################################################
[tool.poetry]
name = "fgo-farm-report-collection"
version = "0.1.0"
description = "FGO farm report collection"
authors = ["Rem_"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "fgo_farm_report_collection", from = "src"}
]

[tool.poetry.build]
generate-setup-file = false

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.27.1"
pandas = "^1.4.0"
beautifulsoup4 = "^4.10.0"
html5lib = "^1.1"
lxml = "^4.7.1"
tzdata = "^2021.5"
openpyxl = "^3.0.9"
styleframe = "^4.0.0"
pyyaml = "^6.0"
decli = "^0.6.0"
python-lib-for-me = {path = "../python-lib-for-me", develop = true}

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.6"
mypy = "^1.2.0"
types-requests = "^2.27.11"

[tool.poetry.scripts]
fgo = "fgo_farm_report_collection.main.main:main"

####################################################################################################
# build system
####################################################################################################
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

####################################################################################################
# static code analysis tool
####################################################################################################
[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F403", # from {name} import * used; unable to detect undefined names
]

[tool.ruff.lint]
select = [
    "F",    # Pyflakes
    "E",    # pycodestyle error
    "W",    # pycodestyle warning
    "I",    # isort
    "C9",   # mccabe

    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "D",    # pydocstyle
]
ignore = [
    "F541",     # f-string without any placeholders
    "F841",     # Local variable {name} is assigned to but never used

    "E203",     # Whitespace before '{symbol}'

    "UP007",    # Use X | Y for type annotations

    "D100",     # Missing docstring in public module
    "D202",     # No blank lines allowed after function docstring (found {num_lines})
    "D212",     # Multi-line docstring summary should start at the first line
    "D415",     # First line should end with a period, question mark, or exclamation point
]
fixable = [
    "I",    # isort
]

[tool.ruff.lint.mccabe]
max-complexity = 18 # if 20 or more, it is hard to test because of complex code.

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
# Import discovery
files = "src,tests"
ignore_missing_imports = true
# Untyped definitions and calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
# None and Optional handling
strict_optional = true
# Configuring warnings
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
# Configuring error messages
show_column_numbers = true
show_error_codes = true
pretty = true
